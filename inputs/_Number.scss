@use "../core/ClassLets";
@use "../design/ColorTheme";
@use "../design/ColorVars" as cl;
@use "../design/ColorUtils" as cu;
@use "../core/Utils" as u;

//
@layer ux-inputs {
    :where(.number-input) {
        --block-size: 2rem;

        //
        display: grid;
        grid-template-columns: minmax(var(--block-size), max-content) minmax(max-content, 1fr) minmax(var(--block-size), max-content);
        grid-template-rows: minmax(var(--block-size), max-content);
        overflow: hidden;
        
        //
        &, input {
            font-family: Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, serif;
        }
        
        //
        @extend .align-center;
        @extend .pe-enable;
        
        //
        & .input-wrap {
            @extend .stretch;
            
            //
            @include u.clamped-height(var(--block-size), stretch, var(--block-size));
            
            //
            background-color: var(--current-surface-color);
            overflow: visible;
        }
        
        //
        & input {
            @extend .stretch;
            @extend .no-wrap;
            
            //
            overflow: visible;
            min-inline-size: 3em;
            display: inline-block;
            opacity: 1;
            text-align: center;
            background: transparent;
            inline-size: max-content;
            max-inline-size: 4em;
            
            appearance: textfield;
            visibility: visible;
            
            //
            font-size: 0.8rem;
            color: var(--current-glyph-color);
            
            //
            @include u.clamped-height(var(--block-size), stretch, var(--block-size));
        }
        
        //
        & > * {
            @extend .align-center;
            @extend .stretch;
            @extend .max-content-as-min;
            
            //
            display: flex;
            padding: 0.5rem;
            background: transparent;
            
            //
            @include u.clamped-height(var(--block-size), stretch, var(--block-size));
        }
        
        //
        & > :is(.f-minus, .f-plus) {
            cursor: pointer;
            background-color: var(--current-surface-color) !important;
        }
        
        //
        & > .icon-wrap {
            @extend .stretch;
            @extend .max-content-as-min;
            aspect-ratio: 1 / 1;
        }
    }
}
