/* 
 * Here is very simple class-lets, for something harder use complex!
 */

//@layer ux-classlets {

    // usable for grid-items
    @mixin auto-space {
        inline-size: auto;
        inline-size: stretch;
        block-size: auto;
        block-size: stretch;
    }

    //
    @mixin stretch {
        inline-size: 100%;
        block-size: 100%;

        //
        max-inline-size: 100%;
        max-block-size: 100%;
    }

    //
    @mixin contained {
        inline-size: 100cqi;
        block-size: 100cqb;
    }

    //
    @mixin fixed { position: fixed; overflow: visible; }
    @mixin inset-0 { inset: 0px; };

    //
    @mixin horizontal-force {
        writing-mode: horizontal-tb;
    }

    //
    @mixin orientation-adaptive {
        transform-origin: center center;
        writing-mode: var(--pwm);
        direction: var(--pdir);
        rotate: var(--pfrot, 0deg);
    }

    //
    @mixin padding-0 {
        padding: 0px;
    }

    //
    @mixin overflow-visible {
        overflow: visible;
    }

    //
    @mixin relative {
        position: relative;
    }

    // bit-complex element
    @mixin grid-inside {
        position: relative;
        grid-column: 1 / 1;
        grid-row: 1 / 1;
    }

    //
    @mixin pointer-events-enable {
        pointer-events: auto;
    }

    //
    @mixin pe-enable {
        @include pointer-events-enable;
    }

    //
    @mixin user-select-enable {
        // DO auto-prefix by PostCSS!
        /*-webkit-user-select: auto;
        -khtml-user-select: auto;
        -moz-user-select: auto;
        -o-user-select: auto;
        -ms-user-select: auto;*/
        user-select: auto;
    }

    //
    @mixin ux-hidden {
        opacity: 0 !important;
        pointer-events: none !important;
        visibility: collapse !important;
        
        & * {
            pointer-events: none !important;
        }
    }

    //
    @mixin us-enable {
        @include user-select-enable;
    }

    //
    @mixin user-drag-enable {
        -webkit-user-drag: auto;
        -khtml-user-drag: auto;
        -moz-user-drag: auto;
        -o-user-drag: auto;
        -ms-user-drag: auto;
        user-drag: auto;
    }

    //
    @mixin ud-enable {
        @include user-drag-enable;
    }
    
    //
    @mixin no-user-select {
        //
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: none;
        -ms-user-select: none;
        user-select: none;
        
        //
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        -ms-user-drag: none;
        user-drag: none;
    }

    //
    @mixin pointer-events-none {
        pointer-events: none;
        
        //
        @include no-user-select;
    }

    //
    @mixin pe-none {
        @include pointer-events-none;
    }
    
    // depends from virtual keyboards
    @mixin fit-viewport {
        @include vp-vars;
        
        //
        inline-size: var(--vp-i-size);
        block-size: var(--vp-b-size);
        
        //
        max-inline-size: var(--vp-i-size);
        max-block-size: var(--vp-b-size);
    }
    
    // not depends from virtual keyboards
    @mixin fixed-avail {
        @include fixed;
        @include inset-0;
        @include fit-viewport;
    }

    //
    @mixin cursor-pointer {
        cursor: pointer;
    }

    //
    @mixin align-center {
        // FLEX/GRID
        justify-content: center;
        justify-items: center;
        align-content: center;
        align-items: center;
        
        // Legacy
        text-align: center;
        vertical-align: center;
        
        // EXPERIMENTAL!
        place-content: center;
        place-items: center;
    }
    
    //
    @mixin inset-auto {
        inset: auto;
    }
    
    //
    @mixin no-contain {
        container-type: normal;
        contain: none;
    }

    //
    @mixin layer-1m { z-index: -1; };
    @mixin layer-0 { z-index: 0; };
    @mixin layer-1 { z-index: 1; };
    @mixin layer-2 { z-index: 2; };
    @mixin layer-99 { z-index: 99; };
    @mixin layer-999 { z-index: 999; };

    // display: contents + pointer-events: none
    // used for transparent wrappers
    @mixin contents {
        container-type: normal;
        contain: none;
        display: contents;
        pointer-events: none;
        background-color: transparent;
    }
    
    //
    @mixin max-content-as-min {
        min-inline-size: max-content;
        min-block-size: max-content;
    }
    
    @mixin inline-stretch {
        inline-size: stretch;
        block-size: max-content;
        
        max-block-size: stretch;
        min-block-size: max-content;
    }
    
    //
    @mixin contain-size {
        container-type: size;
        contain: content;
        
        //
        @include max-content-as-min;
        @include stretch;
    }
    
    //
    @mixin contain-inline-size {
        container-type: inline-size;
        contain: content;
        
        //
        @include inline-stretch;
    }

    //
    @mixin round-ns {
        border-radius: 0.2rem;
    }

    //
    @mixin no-wrap {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        word-break: keep-all;
        word-wrap: normal;
    }
    
    //
    @mixin align-inline-left {
        text-align: start;
        justify-self: start;
        justify-content: start;
        justify-items: start;
    }



    //
    @layer ux-classlets {
        //
        .vp-vars {
            --vp-i-size: calc(100dvi / var(--zoom, 1));
            --vp-b-size: calc(100dvb / var(--zoom, 1));

            //
            /*@media screen and ((hover: none) and (pointer: coarse)) {
                --vp-i-size: calc(var(--avail-width, 100lvi) / var(--zoom, 1));
                --vp-b-size: calc(var(--avail-height, 100lvb) / var(--zoom, 1));
            }*/

            //
            @media screen and ((display-mode: fullscreen) or (display-mode: standalone)) {
                --vp-i-size: calc(var(--avail-width, 100lvi) / var(--zoom, 1));
                --vp-b-size: calc(var(--avail-height, 100lvb) / var(--zoom, 1));
            }

            //
            @at-root :fullscreen & {
                --vp-i-size: calc(var(--avail-width, 100lvi) / var(--zoom, 1));
                --vp-b-size: calc(var(--avail-height, 100lvb) / var(--zoom, 1));
            }
        }


        //
        .vp-vars-keyboard-dependent {
            --vp-i-size: calc(100dvi / var(--zoom, 1));
            --vp-b-size: calc(100dvb / var(--zoom, 1));

            //
            @media screen and ((display-mode: fullscreen) or (display-mode: standalone)) {
                --vp-i-size: calc(var(--avail-width, 100lvi) / var(--zoom, 1));
                --vp-b-size: calc(var(--avail-height, 100lvb) / var(--zoom, 1));
            }

            //
            @at-root :fullscreen & {
                --vp-i-size: calc(var(--avail-width, 100lvi) / var(--zoom, 1));
                --vp-b-size: calc(var(--avail-height, 100lvb) / var(--zoom, 1));
            }
        }

        // bit-complex element
        .grid-based-box {
            @include stretch;
            @include align-center;

            //
            container-type: size;
            contain: content;

            //
            isolation: auto;

            //
            display: grid;
            grid-template-columns: minmax(0px, 1fr);
            grid-template-rows: minmax(0px, 1fr);
            position: fixed;
            inset: 0px;

            //
            pointer-events: none;
            overflow: visible;

            //
            align-items: start;
            align-content: start;
            align-self: start;

            //
            & > :where(*) {
                @include contained;
                @include grid-inside;
                @include align-center;
                
                //
                align-items: start;
                align-content: start;
                align-self: start;
            }
        }

    }


    //
    @mixin vp-vars {
        @extend .vp-vars;
    }

    //
    @mixin vp-vars-keyboard-dependent {
        @extend .vp-vars-keyboard-dependent;
    }
    


//}
