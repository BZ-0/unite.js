
@property --cell-x { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --cell-y { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --vect-x { syntax: "<number>"; initial-value: 0; inherits: true; }
@property --vect-y { syntax: "<number>"; initial-value: 0; inherits: true; }
@property --drag-x { syntax: "<number>"; initial-value: 0; inherits: true; }
@property --drag-y { syntax: "<number>"; initial-value: 0; inherits: true; }

//
@property --p-drag-x { syntax: "<number>"; initial-value: 0; inherits: true; }
@property --p-drag-y { syntax: "<number>"; initial-value: 0; inherits: true; }
@property --p-cell-x { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --p-cell-y { syntax: "<integer>"; initial-value: 0; inherits: true; }

//
@property --grid-w { syntax: "<number>"; initial-value: 0; inherits: true; }
@property --grid-h { syntax: "<number>"; initial-value: 0; inherits: true; }

//
@property --f-col { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --f-row { syntax: "<integer>"; initial-value: 0; inherits: true; }

//
@property --fc-cell-x { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --fc-cell-y { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --fp-cell-x { syntax: "<integer>"; initial-value: 0; inherits: true; }
@property --fp-cell-y { syntax: "<integer>"; initial-value: 0; inherits: true; }

//
@property --r-gap {
    syntax: "<number>";
    initial-value: 1;
    inherits: true;
}

//
@property --c-gap {
    syntax: "<number>";
    initial-value: 1;
    inherits: true;
}

//
@property --rows {
    syntax: "<number>";
    initial-value: 1;
    inherits: true;
}

//
@property --columns {
    syntax: "<number>";
    initial-value: 1;
    inherits: true;
}

//
@mixin virtualCell() {}

//
@mixin calculateMetric() {
    // CLAMPED GRID
    --f-col: clamp(4, var(--columns, 4), 6);
    --f-row: clamp(8, var(--rows, 8), 12);

    //
    --fc-cell-x: calc(clamp(0, var(--cell-x), calc(var(--f-col) - 1)) + 1);
    --fc-cell-y: calc(clamp(0, var(--cell-y), calc(var(--f-row) - 1)) + 1);

    //
    --fp-cell-x: calc(clamp(0, var(--p-cell-x), calc(var(--f-col) - 1)) + 1);
    --fp-cell-y: calc(clamp(0, var(--p-cell-y), calc(var(--f-row) - 1)) + 1);

    //
    --vect-x: calc(var(--fc-cell-x) - var(--fp-cell-x));
    --vect-y: calc(var(--fc-cell-y) - var(--fp-cell-y));
}
