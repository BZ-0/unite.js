
@use "../core/ClassLets";

//
@mixin virtualCell() {}

//
@mixin calculateMetric() {
    // CLAMPED GRID
    --f-col: clamp(4, var(--columns, 4), 6);
    --f-row: clamp(8, var(--rows, 8), 12);

    //
    --fc-cell-x: calc(clamp(0, var(--cell-x), calc(var(--f-col) - 1)) + 1);
    --fc-cell-y: calc(clamp(0, var(--cell-y), calc(var(--f-row) - 1)) + 1);

    //
    --fp-cell-x: calc(clamp(0, var(--p-cell-x), calc(var(--f-col) - 1)) + 1);
    --fp-cell-y: calc(clamp(0, var(--p-cell-y), calc(var(--f-row) - 1)) + 1);

    //
    --vect-x: calc(var(--fc-cell-x) - var(--fp-cell-x));
    --vect-y: calc(var(--fc-cell-y) - var(--fp-cell-y));
}

//
@layer ux-grid {

    //
    .ux-grid-pages {
        --padding-h: 1rem;
        --padding-v: 1.5rem;
        
        //
        overflow: visible !important;
        contain: content !important;
        
        //
        padding-inline: var(--padding-h);
        padding-block: var(--padding-v);
        
        //
        @media (orientation: portrait) {
            padding-inline: var(--padding-h);
            padding-block: var(--padding-v);
        }
        
        //
        @media (orientation: landscape) {
            padding-inline: var(--padding-v);
            padding-block: var(--padding-h);
        }
    }

    //
    .ux-grid-page {
        container-name: ux-grid;
        container-type: size;

        //
        overflow: visible !important;
        contain: size layout !important;

        //
        pointer-events: none;

        //
        background-color: transparent;

        //
        //grid-template-columns: repeat(var(--columns), minmax(0px, 1fr));
        //grid-template-rows: repeat(var(--rows), minmax(0px, 1fr));
        
        filter: drop-shadow(0px 0px 0.25rem #00000060);

        //
        --c-gap: 1;
        --r-gap: 1;
    
        //
        padding-inline: calc(var(--c-gap) * 0.5rem);
        padding-block : calc(var(--r-gap) * 0.5rem);
    
        //
        column-gap: calc(var(--c-gap) * 1rem);
        row-gap: calc(var(--r-gap) * 1rem);
        
        //
        place-items: center !important;
        place-content: space-around !important;
        
        //
        @media (orientation: portrait) {
            grid-template-columns: repeat(var(--columns), minmax(0px, 1fr));
            grid-template-rows: repeat(var(--rows), minmax(0px, 1fr));
        }
        
        //
        @media (orientation: landscape) {
            grid-template-columns: repeat(var(--rows), minmax(0px, 1fr));
            grid-template-rows: repeat(var(--columns), minmax(0px, 1fr));
        }
        
        //
        & > :where(*) {
            place-self: center !important;
        }
        
        //
        .ux-grid-item-label {
            @include calculateMetric();
            @extend .no-wrap;
        
            //
            --icon-size: calc(100cqmin / max(var(--columns), var(--rows)) - max(var(--c-gap), var(--r-gap)) * 1rem);
            
            //
            display: inline-block;
            inline-size: max-content;
            block-size: max-content;
            
            //
            font-size: 0.8rem;
            
            //
            --grid-column: var(--fc-cell-x);
            --grid-row: var(--fc-cell-y);
            
            //
            //writing-mode: horizontal-tb;
        
            //
            --translate-y: 2.5rem;
            transform: translate(var(--translate-x), var(--translate-y));
            
            //
            will-change: translate, transform, --rx, --ry, --drag-x, --drag-y, --resize-x, --resize-y;
        }
        
        //
        .ux-grid-item {
            @include calculateMetric();
            
            // unsupported
            //writing-mode: horizontal-tb;
            
            //
            //background-color: white;
            overflow: hidden;
            
            //
            --grid-column: var(--fc-cell-x);
            --grid-row: var(--fc-cell-y);
            
            //
            touch-action: none !important; 
            user-select: none;
            -webkit-user-drag: none;
            -moz-user-drag: none;
    
            //
            transform: translate3d(var(--translate-x), var(--translate-y), 0px);
            will-change: translate, transform, --rx, --ry, --drag-x, --drag-y, --resize-x, --resize-y, --translate-x, --translate-y;
            
            //
            aspect-ratio: 1 / 1;
            
            //
            clip-path: var(--clip-path);
            padding: calc(var(--icon-size) * 0.3);
            border-radius: calc(var(--icon-size) * 0.5);
            
            //
            --icon-size: min(calc(100cqmin / min(var(--columns), var(--rows)) - max(var(--c-gap), var(--r-gap)) * 1rem), 4rem);
            
            //
            max-inline-size: var(--icon-size);
            max-block-size: var(--icon-size);
            
            //
            inline-size: var(--icon-size);
            block-size: var(--icon-size);
            
            //
            &:where([data-type="labels"], [data-type="items"]) {
                //writing-mode: horizontal-tb;
            }
            
            //
            &:where([data-type="labels"], [data-type="bucket"]) {
                pointer-events: none;
            }
            
            //
            &:where([data-type="backup"]) {
                --translate-x: calc(var(--drag-x, 0) * 1px);
                --translate-y: calc(var(--drag-y, 0) * 1px);
                
                //
                --grid-column: var(--fp-cell-x);
                --grid-row: var(--fp-cell-y);
            }
            
            //
            &:where([data-type="items"]) {
                pointer-events: auto;
                pointer-events: bounding-box;
                cursor: pointer;
            }
        }
    }

}
